syntax = "proto3";

package rpc;
option go_package = "/rpc";

service SimpleEthExplorer {
  // Get all contract log events related to an address
  rpc GetAllEventsByAddress(GetAllEventsByAddressRequest) returns (GetAllEventsByAddressResponse);
}

message GetAllEventsByAddressRequest {
  // smart contract address that emitted the event
  string address = 1;
}

// ContractEventLog represents a contract log event. These events are generated by the LOG opcode and
// stored/indexed by the node.
message Events {
  // Consensus fields:
  // address of the contract that generated the event
  string address = 1;
  // list of topics provided by the contract.
  repeated string topics = 2;
  // supplied by the contract, usually ABI-encoded
  string data = 3;

  // Derived fields. These fields are filled in by the node
  // block in which the transaction was included
  int64 block_number = 4;
  // hash of the transaction
  string tx_hash = 5;
  // index of the transaction in the block
  int64 tx_index = 6;
  // hash of the block in which the transaction was included
  string block_hash = 7;
  // index of the log in the block
  int64 index = 8;

  // The Removed field is true if this log was reverted due to a chain reorganisation.
	// You must pay attention to this field if you receive logs through a filter query.
  bool removed = 9;
}

message GetAllEventsByAddressResponse {
  int64 start_block = 1;
  int64 end_block = 2;
  repeated Events events  = 3;
}
